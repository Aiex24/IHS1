<Application x:Class="Setup_Manager.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Setup_Manager"
             StartupUri="Views/MainWindow.xaml">
    <Application.Resources>

        <SolidColorBrush x:Key="DisabledBrush" Color="#34A7FB"/>

        <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />

        <SolidColorBrush x:Key="ActiveBrush" Color="#2C6995" />
        <SolidColorBrush x:Key="ActiveForegroundBrush" Color="White"/>
        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#0e8ece" />

        <SolidColorBrush x:Key="DisabledBorderBrush" Color="#0e8ece" />

        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="Black" />

        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#34A7FB"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}"
                                CornerRadius="20"
                                BorderThickness="1"
                                Padding="2"
                                BorderBrush="#277cba">
                            
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="BorderBrush" TargetName="border" Value="LightGray"/>
                            </Trigger>
                            </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#0e8ece"/>
                    <Setter Property="Foreground" Value="#fff"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="LightGray"/>
                    <Setter Property="Background" Value="White"/>
                </Trigger>
                </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type TabControl}">
            <Setter Property="TabStripPlacement" Value="Left"/>
        </Style>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border 
                                Name="Border"
                                Margin="0"
                                Background="{StaticResource DisabledBrush}"
                                BorderBrush="White" 
                                BorderThickness="0,0,0,0"
                                CornerRadius="0,0,0,0">
                                <ContentPresenter x:Name="ContentSite"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    ContentSource="Header"
                                    Margin="0,10,0,10" 
                                    RecognizesAccessKey="True"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Panel.ZIndex" Value="0" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ActiveBrush}" />
                                <Setter Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBrush}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBrush}" />
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
